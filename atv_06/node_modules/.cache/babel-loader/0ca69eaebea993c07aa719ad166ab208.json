{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\n\nconst useFech = () => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  async function fetchData(url, options) {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(url, options);\n      const json = await response.json();\n    } catch (error) {\n      setError(error);\n    } finally {\n      setData(json);\n      setLoading(false);\n    }\n  }\n\n  return {\n    fetchData,\n    data,\n    loading,\n    error\n  };\n};\n\n_s(useFech, \"PF2na9M8UJ4bLzW1+Lbyf4L3N00=\");\n\nexport default useFech;","map":{"version":3,"sources":["/home/emanuel/Documents/React_Origamid/desafio_06/src/useFetch.js"],"names":["React","useFech","data","setData","useState","loading","setLoading","error","setError","fetchData","url","options","response","fetch","json"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBF,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;;AAEA,iBAAeK,SAAf,CAAyBC,GAAzB,EAA8BC,OAA9B,EAAuC;AACrCL,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAMC,OAAN,CAA5B;AACA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACD,KAHD,CAGE,OAAOP,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KALD,SAKU;AACRJ,MAAAA,OAAO,CAACW,IAAD,CAAP;AACAR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF;;AAED,SAAO;AAAEG,IAAAA,SAAF;AAAaP,IAAAA,IAAb;AAAmBG,IAAAA,OAAnB;AAA4BE,IAAAA;AAA5B,GAAP;AACD,CApBD;;GAAMN,O;;AAsBN,eAAeA,OAAf","sourcesContent":["import React from 'react'\n\nconst useFech = () => {\n  const [data, setData] = useState(null)\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(null)\n\n  async function fetchData(url, options) {\n    setLoading(true)\n    setError(null)\n    try {\n      const response = await fetch(url, options)\n      const json = await response.json()\n    } catch (error) {\n      setError(error)\n    } finally {\n      setData(json)\n      setLoading(false)\n    }\n  }\n\n  return { fetchData, data, loading, error }\n}\n\nexport default useFech"]},"metadata":{},"sourceType":"module"}