{"ast":null,"code":"var _jsxFileName = \"/home/emanuel/Documents/React_Origamid/atv_07/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useFech from './useFetch'; // // Faça um fetch (POST) para a API abaixo\n// // Para a criação ser aceita é necessário enviar dodos de:\n// // nome, email, senha, cep, rua, numero, bairro, cidade e estado\n// // Essa é a função utilizado para realizar o POST\n// fetch('https://ranekapi.origamid.dev/json/api/usuario', {\n//   method: 'POST',\n//   headers: {\n//     'Content-Type': 'application/json',\n//   },\n//   // form é o objeto com os dados do formulário\n//   body: JSON.stringify(form),\n// });\n// // Mostre uma mensagem na tela, caso a resposta da API seja positiva\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formFields = [{\n  id: 'nome',\n  label: 'Nome',\n  type: 'text'\n}, {\n  id: 'email',\n  label: 'Email',\n  type: 'email'\n}, {\n  id: 'senha',\n  label: 'Senha',\n  type: 'password'\n}, {\n  id: 'cep',\n  label: 'CEP',\n  type: 'text'\n}, {\n  id: 'rua',\n  label: 'Rua',\n  type: 'text'\n}, {\n  id: 'numero',\n  label: 'Número',\n  type: 'text'\n}, {\n  id: 'bairro',\n  label: 'Bairro',\n  type: 'text'\n}, {\n  id: 'cidade',\n  label: 'Cidade',\n  type: 'text'\n}, {\n  id: 'estado',\n  label: 'Estado',\n  type: 'text'\n}];\n\nconst App = () => {\n  _s();\n\n  const [response, setResponse] = React.useState(null);\n  const [form, setForm] = React.useState({\n    nome: '',\n    email: '',\n    senha: '',\n    cep: '',\n    rua: '',\n    numero: '',\n    bairro: '',\n    cidade: '',\n    estado: ''\n  });\n\n  function handleChange(_ref) {\n    let {\n      target\n    } = _ref;\n    const {\n      id,\n      value\n    } = target;\n    setForm({ ...form,\n      [id]: value\n    });\n  }\n\n  function handleSubmit(event) {\n    fetch('https://ranekapi.origamid.dev/json/api/usuario', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(form)\n    }).then(response => setResponse(response.status));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [formFields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: field.id,\n        children: field.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: field.id,\n        type: field.type,\n        value: form[field.id],\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, field.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Enviar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }, this), response && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Formul\\xE1rio enviado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 10\n  }, this);\n};\n\n_s(App, \"uKCiu3gsIa2+yGzYx/ypVkUEMzQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/emanuel/Documents/React_Origamid/atv_07/src/App.js"],"names":["React","useFech","formFields","id","label","type","App","response","setResponse","useState","form","setForm","nome","email","senha","cep","rua","numero","bairro","cidade","estado","handleChange","target","value","handleSubmit","event","fetch","method","headers","body","JSON","stringify","then","status","map","field"],"mappings":"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","sourcesContent":["import React from 'react'\nimport useFech from './useFetch';\n\n// // Faça um fetch (POST) para a API abaixo\n// // Para a criação ser aceita é necessário enviar dodos de:\n// // nome, email, senha, cep, rua, numero, bairro, cidade e estado\n\n// // Essa é a função utilizado para realizar o POST\n// fetch('https://ranekapi.origamid.dev/json/api/usuario', {\n//   method: 'POST',\n//   headers: {\n//     'Content-Type': 'application/json',\n//   },\n//   // form é o objeto com os dados do formulário\n//   body: JSON.stringify(form),\n// });\n\n// // Mostre uma mensagem na tela, caso a resposta da API seja positiva\n\nconst formFields = [\n  {\n    id: 'nome',\n    label: 'Nome',\n    type: 'text',\n  },\n  {\n    id: 'email',\n    label: 'Email',\n    type: 'email',\n  },\n  {\n    id: 'senha',\n    label: 'Senha',\n    type: 'password',\n  },\n  {\n    id: 'cep',\n    label: 'CEP',\n    type: 'text',\n  },\n  {\n    id: 'rua',\n    label: 'Rua',\n    type: 'text',\n  },\n  {\n    id: 'numero',\n    label: 'Número',\n    type: 'text',\n  },\n  {\n    id: 'bairro',\n    label: 'Bairro',\n    type: 'text',\n  },\n  {\n    id: 'cidade',\n    label: 'Cidade',\n    type: 'text',\n  },\n  {\n    id: 'estado',\n    label: 'Estado',\n    type: 'text',\n  }\n]\n\nconst App = () => {\n\n  const [response, setResponse] = React.useState(null);\n  const [form, setForm] = React.useState({\n    nome: '',\n    email: '',\n    senha: '',\n    cep: '',\n    rua: '',\n    numero: '',\n    bairro: '',\n    cidade: '',\n    estado: '',\n  })\n\n  function handleChange({ target }){\n    const { id, value} = target\n    setForm({...form, [id]: value})\n  }\n\n  function handleSubmit(event){\n    fetch('https://ranekapi.origamid.dev/json/api/usuario', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(form)})\n      .then(response => (\n        setResponse(response.status)\n      ))\n      \n  }\n\n  return <form onSubmit={handleSubmit}>\n    {formFields.map(field => (\n      <div key={field.id}>\n        <label htmlFor={field.id}>{field.label}</label>\n        <input\n          id={field.id}\n          type={field.type}\n          value={form[field.id]}\n          onChange={handleChange}\n        />\n      </div>\n    ))}\n    <br/>\n    <button type=\"submit\">Enviar</button>\n    {response && <p>Formulário enviado</p>}\n  </form>\n};\n\n\n\nexport default App"]},"metadata":{},"sourceType":"module"}